<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AutoSchemaBuilder_MissingIdMember" xml:space="preserve">
    <value>The Item of type '{0}' has no Id member specified. A Guid or Int property named 'Id' was expected.</value>
  </data>
  <data name="Id_GuidIsMissingValue" xml:space="preserve">
    <value>You must provide an unique guid to the GuidId.</value>
  </data>
  <data name="SisoDatabase_UnknownStorageProvider" xml:space="preserve">
    <value>The provided StorageProvider '{0}' is not supported.</value>
  </data>
  <data name="AutoSchemaBuilder_MissingIndexableMembers" xml:space="preserve">
    <value>The Item of type '{0}' has no members that are indexable. There's no point in storing items that has nothing to index.</value>
  </data>
  <data name="StringConverter_AsString_TypeOfValueIsNotSupported" xml:space="preserve">
    <value>The value being retrieved is not of supported type. It must either be a string or the type needs to implement IConvertible or if Nullable&lt;T&gt;, then T needs to implement it.</value>
  </data>
  <data name="Index_IsMissingName" xml:space="preserve">
    <value>An Index-instance must be provided with a name.</value>
  </data>
  <data name="SqlUnitOfWork_NoItemExistsForUpdate" xml:space="preserve">
    <value>There is no '{0}'-structure to update matching the sent Id '{1}'.</value>
  </data>
  <data name="SisoConnectionInfo_MissingConnectionStringOrNameArg" xml:space="preserve">
    <value>A connectionstring or connectionstring name needs to be passed to the constructor.</value>
  </data>
  <data name="LambdaParser_VisitUnary_NotSupported" xml:space="preserve">
    <value>The unary operator '{0}' is not supported.</value>
  </data>
  <data name="TypeExtensions_ExtractGenericType" xml:space="preserve">
    <value>Supported generic collections on model are: implementations of either IEnumerable&lt;T&gt; or IList&lt;T&gt;.</value>
  </data>
  <data name="Property_GetIdValue_InvalidLevel" xml:space="preserve">
    <value>Id values must lie on the root object.</value>
  </data>
  <data name="Structure_DuplicateUniques" xml:space="preserve">
    <value>Duplicate Unique-index found for '{0}'.\r\nStructureId: '{1}';Name: '{2}';Value: '{3}';</value>
  </data>
  <data name="Id_IdentityIsOutOfRange" xml:space="preserve">
    <value>You must provide a positive identity.</value>
  </data>
  <data name="AutoSchemaBuilder_UnsupportedIdAccessorType" xml:space="preserve">
    <value>The id property: '{0}'; is not of suported type. Only Guid and Int is accepted.</value>
  </data>
  <data name="DbSchemaUpserter_Upsert_IdTypeNotSupported" xml:space="preserve">
    <value>The IdType '{0}' is not supported when upserting tables!</value>
  </data>
  <data name="SqlUnitOfWork_DoIdentityInsert_RootItemsMissmatch" xml:space="preserve">
    <value>The number of passed root items is not equal to the number of inserted root items!</value>
  </data>
  <data name="ExpressionEvaluator_EvaluateMemberExpression_NotSupported" xml:space="preserve">
    <value>Direct memberaccess of node: '{0}'; with with membertype: '{1}'; is not supported!</value>
  </data>
  <data name="StructureBuilder_MissingIdentityValue" xml:space="preserve">
    <value>When using identities the Id-property of the entity must be assigned before structure is created.</value>
  </data>
  <data name="StructureBuilder_UnSupportedIdentityType" xml:space="preserve">
    <value>The identity type: '{0}' is not supported.</value>
  </data>
  <data name="IdAccessor_UnsupportedPropertyType" xml:space="preserve">
    <value>The Property.PropertyType '{0}' is not supported by the IdAccessor.</value>
  </data>
  <data name="Property_GetIdValue_UnsupportedIdDataType" xml:space="preserve">
    <value>Unknown datatype for Id-value.</value>
  </data>
  <data name="StructureIndex_ValueArgument_IncorrectType" xml:space="preserve">
    <value>Only strings and valuetypes can be stored as indexes.</value>
  </data>
  <data name="SqlDatabase_ConnectionInfo_MissingName" xml:space="preserve">
    <value>The name of the database could not be extracted from the connection-info.</value>
  </data>
  <data name="SqlDbDataTypeTranslator_UnsupportedDataType" xml:space="preserve">
    <value>The datatype '{0}' is not supported!</value>
  </data>
  <data name="Property_Ctor_UniqueOnNonSimpleType" xml:space="preserve">
    <value>You cant apply Unique on a member that is not of a simple type e.g. (int, string, bool) etc.</value>
  </data>
  <data name="StructureBuilder_UniqueIndex_IsNull" xml:space="preserve">
    <value>The Unique index '{0}':'{1}' is evaluated to Null. This is not alowed.</value>
  </data>
  <data name="SqlDatabase_InitializeExisting_DbDoesNotExist" xml:space="preserve">
    <value>The database '{0}' doesn't exist.</value>
  </data>
  <data name="AzureDatabase_UnsupportedProviderSpecified" xml:space="preserve">
    <value>Storageprovider '{0}' is unsupported. When consuming an Azure-database the storageprovider should be: '{1}'.</value>
  </data>
  <data name="SqlDatabase_UnsupportedProviderSpecified" xml:space="preserve">
    <value>Storageprovider '{0}' is unsupported. When consuming an Sql-database the storageprovider should be: '{1}'.</value>
  </data>
  <data name="LambdaParser_NoMemberExpressions" xml:space="preserve">
    <value>You cant only access a member in a query expression, you need to compare it against something. Eg. (x =&gt; x.HasItems) should be (x =&gt; x.HasItems == true)</value>
  </data>
  <data name="ExpressionUtils_GetRightMostMember_NoMemberFound" xml:space="preserve">
    <value>No MemberExpression found in expression: '{0}'.</value>
  </data>
  <data name="LambdaOperator_OperatorTypeIsNotSupported" xml:space="preserve">
    <value>Operator '{0}' is not supported!</value>
  </data>
  <data name="LambdaOperator_IsOrIsNot_NotSupported" xml:space="preserve">
    <value>The operator type '{0}' can not be converted to 'IsNotNullOperatpr' or 'NullOperator'.</value>
  </data>
  <data name="LambdaParser_UnsupportedMethodCall" xml:space="preserve">
    <value>Could not evaluate the method call: '{0}'.
Specific supported method exists as extensionmethods and are prefixed with 'Qx'. Import namespace 'SisoDb.Querying' to enable them.</value>
  </data>
  <data name="SqlDbDataTypeTranslator_ByteArraysAreNotSupported" xml:space="preserve">
    <value>Byte arrays are not supported for storage in the Indexes-table since they should not be queryable. Index name: '{0}'.</value>
  </data>
  <data name="LambdaParser_MemberIsBytes" xml:space="preserve">
    <value>Byte arrays are not supported for member: '{0}'.</value>
  </data>
</root>